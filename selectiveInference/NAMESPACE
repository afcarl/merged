export(lar,fs,
       larInf,fsInf,fsInf_maxZ,
       coef.lar,coef.fs,
       predict.lar,predict.fs,
       print.lar,print.fs,
       print.larInf,print.fsInf,
       plot.lar,plot.fs,
       fixedLassoInf,print.fixedLassoInf,
 #     fixedLogitLassoInf,print.fixedLogitLassoInf,
  #     fixedCoxLassoInf,print.fixedCoxLassoInf,
       forwardStop,
       estimateSigma,
       manyMeans,print.manyMeans,
       groupfs,groupfsInf,
       scaleGroups,factorDesign,
       sample_from_constraints
    )

S3method("coef", "lar")
S3method("predict", "lar")
S3method("print", "lar")
S3method("plot", "lar")
S3method("print", "larInf")
S3method("coef", "fs")
S3method("predict", "fs")
S3method("print", "fs")
S3method("plot", "fs")
S3method("print", "fsInf")
S3method("print", "fsInf_maxZ")
S3method("print", "fixedLassoInf")
S3method("print", "fixedLogitLassoInf")
S3method("print", "fixedCoxLassoInf")
S3method("print", "manyMeans")
S3method("print", "groupfs")
S3method("print", "groupfsInf")

useDynLib("selectiveInference")
import(glmnet)
import(intervals)
importFrom("graphics", abline, axis, matplot)
importFrom("stats", dnorm, lsfit, pexp, pnorm, predict,
           qnorm, rnorm, sd, uniroot, dchisq, model.matrix, pchisq)
importFrom("stats", "coef", "df", "lm", "pf")

